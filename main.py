import logging
from telegram.ext import ApplicationBuilder, MessageHandler, CommandHandler, ContextTypes
from telegram.ext import filters
from telegram import Update
from threading import Thread

from handlers import handle_message, handle_comandos, handle_new_members
from config import TELEGRAM_TOKEN
from painel import iniciar_painel


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
Â  Â  await update.message.reply_text("Bot iniciado com sucesso!")


def main():
Â  Â  # ConfiguraÃ§Ã£o de logging
Â  Â  logging.basicConfig(
Â  Â  Â  Â  format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
Â  Â  Â  Â  level=logging.INFO
Â  Â  )

Â  Â  # CriaÃ§Ã£o da aplicaÃ§Ã£o
Â  Â  app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

Â  Â  # Handlers
Â  Â  app.add_handler(CommandHandler(["resumo", "info"], handle_comandos))
Â  Â  app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
Â  Â  app.add_handler(MessageHandler(filters.StatusUpdate.NEW_CHAT_MEMBERS, handle_new_members))

Â  Â  # Inicia o painel em thread separada
Â  Â  Thread(target=iniciar_painel, daemon=True).start()

Â  Â  print("ðŸ¤– Bot iniciado com sucesso!")

Â  Â  # Inicia o bot
Â  Â  app.run_polling()


if __name__ == "__main__":
Â  Â  main()
